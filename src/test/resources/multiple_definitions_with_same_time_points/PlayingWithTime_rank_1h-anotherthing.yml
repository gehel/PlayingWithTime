 # Time played in-game, in minutes. When the player's time in-game is equal-to or higher-than
 # this number, the rest of the operation dictated in this definition will be
 # further evaluated.
time: '60'
 # Add the user to groups/permissions.
 # Can be one or multiple in either group or permissions lists.
 # If none provided, no permission/group action will be done.
add:
  groups:
    -  'test.group1'
  permissions:
 # Send a message following the processing of this definition. The message can be
 # sent to the user specifically, or to the entire chat as a broadcast.
 # Available placeholders for messages:
 # - %playername% Player name
 # - %timeingame% Player's time in game, in minutes.
send_message:
   # Send message to the entire chat.
   # If more than one message is provided, a random one is chosen each time
   # a user triggers the definition process.
  to_everyone:
   # Send message directly to the user. No one else will see it.
   # If more than one message is provided, a random one is chosen each time
   # a user triggers the definition process.
  to_user:
 # Custom command that will run if the user matches time played and prerequisites
 # But will **not** run if the user already has the group/perms under "add" groups
 # Watch out; if nothing is provided under 'add' group above, this command will run
 # every time the user logs in if their time played is above the value.
 # Available placeholders for commands:
 # - %playername% Player name
 # - %timeingame% Player's time in game, in minutes.
custom_commands:
 # A list of groups and permissions that the player must have for the process
 # to continue. This can include group names, permission names, or neither.
 # All of those rules must apply to the player in question, or the system will
 # skip the processing of this definition file for the user even if the time played matches.
 # This is useful to make different time-based rules for users who belong to different
 # rules. Leave blank for the system to only consider time played and nothing else.
musthave:
  groups:
  permissions:
 # A list of groups and permissions that the player cannot have for the process
 # to continue. This can include group names, permission names, or neither.
 # Unlike the must-have list, the 'canthave' only considers *any* of the groups
 # or permissions in the list, even if the player does not have all of them. If
 # one is true for the player, the process stops.
 # This is useful to assign permissions or groups that are overrides for the
 # time-based rules. You can have multiple override, and any override will apply.
canthave:
  groups:
  permissions:
